/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define FUN 3
#define ADJ 4

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE N0 N1 N2 N3 N4 N5 N6 N7 N8 N9>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_home: td_home {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_HOME";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp HOME>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jkEsc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        to_fun_layer {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };

        combo_to_nav {
            bindings = <&mo 1>;
            key-positions = <13 14>;
        };

        tosymlayer {
            bindings = <&mo 5>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &mt ESCAPE Q      &kp W       &kp E          &kp R           &kp T           &kp Y      &kp U            &kp I            &kp O         &mt RALT P           &none
&none  &hm LEFT_SHIFT A  &hm LGUI S  &hm LCTRL D    &hm LEFT_ALT F  &kp G           &kp H      &kp J            &kp K            &kp L         &kp ENTER            &none
&none  &hm LCTRL Z       &hm LGUI X  &hm LCTRL C    &hm LSHFT V     &kp B           &kp N      &hm RIGHT_ALT M  &hm LCTRL COMMA  &hm LGUI DOT  &hm LEFT_SHIFT FSLH  &none
                                     &mt RCTRL TAB  &lt 1 TAB       &kp LEFT_GUI    &kp SPACE  &lt 1 SPACE      &lt 4 DEL
            >;
        };

        nav_layer {
            bindings = <
&none  &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3            &kp NUMBER_4            &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7      &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0  &none
&none  &hm LSHIFT SQT  &hm LGUI MINUS  &hm LCTRL LEFT_BRACKET  &hm LALT RIGHT_BRACKET  &td_home        &kp LEFT       &kp DOWN          &kp UP           &kp RIGHT     &kp SQT       &none
&none  &kp LCTRL       &kp LGUI        &hm RCTRL C_VOL_DN      &hm LALT C_VOL_UP       &kp BSLH        &kp BACKSPACE  &hm RSHIFT PG_DN  &hm RCTRL PG_UP  &hm RGUI END  &kp RALT      &none
                                       &to 0                   &kp BACKSPACE           &kp LEFT_GUI    &kp ENTER      &kp SPACE         &kp DEL
            >;
        };

        num_layer {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT        &to 0      &none       &none      &none     &none     &none
&none  &kp SQT    &kp N4  &kp N5  &kp N6  &kp EQUAL       &kp MINUS  &kp RSHIFT  &kp RCTRL  &kp RGUI  &kp RALT  &none
&none  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH        &none      &kp LSHFT   &kp LCTRL  &kp LGUI  &kp LALT  &none
                          &to 0   &kp N0  &kp LEFT_GUI    &kp RET    &kp SPACE   &kp DEL
            >;
        };

        fun_layer {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9     &kp PSCRN          &none  &none       &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5  &kp F6     &kp SLCK           &none  &kp RSHIFT  &kp RCTRL  &kp RGUI  &kp RALT  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK    &none  &kp LSHFT   &kp LCTRL  &kp LGUI  &kp LALT  &none
                        &to 0   &kp SPACE  &kp LEFT_GUI       &mo 4  &kp SPACE   &none
            >;
        };

        adj_layer {
            bindings = <
&none  &none         &none         &none         &none         &none          &bt BT_CLR   &none       &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none          &none        &none       &none  &none  &none  &none
&none  &out OUT_TOG  &bt BT_PRV    &bt BT_NXT    &sys_reset    &bootloader    &bootloader  &sys_reset  &none  &none  &none  &none
                                   &to 0         &none         &none          &none        &none       &none
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp EXCLAMATION       &kp AT_SIGN   &kp HASH                &kp DOLLAR                  &kp PERCENT     &kp CARET      &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &hm LEFT_SHIFT TILDE  &kp LGUI      &hm LCTRL LBRC          &hm LALT RIGHT_BRACE        &trans          &kp PIPE       &kp MINUS       &kp PLUS         &kp COLON             &kp SEMI               &trans
&trans  &hm LCTRL GRAVE       &kp LEFT_GUI  &hm LCTRL LEFT_BRACKET  &hm LEFT_ALT RIGHT_BRACKET  &trans          &kp BACKSLASH  &hm UNDER LALT  &hm RCTRL EQUAL  &hm RIGHT_GUI PERIOD  &hm RSHIFT QUESTION    &trans
                                            &to 0                   &trans                      &kp LEFT_GUI    &trans         &trans          &trans
            >;
        };
    };
};
