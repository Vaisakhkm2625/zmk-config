/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define FUN 3
#define ADJ 4

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE N0 N1 N2 N3 N4 N5 N6 N7 N8 N9>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <200>;
        };

        td_home: td_home {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_HOME";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES>, <&kp HOME>;
        };

        td_l12: td_l12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_L12";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 1>;

            tapping-term-ms = <250>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jkEsc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        to_fun_layer {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };

        combo_to_nav {
            bindings = <&mo 1>;
            key-positions = <13 14>;
        };

        tosymlayer {
            bindings = <&mo 0>;
            key-positions = <38 39>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <38 30>;
        };

        combo_to_sym_right {
            bindings = <&mo 2>;
            key-positions = <21 22>;
        };

        combo_to_sym_mid_r {
            bindings = <&mo 2>;
            key-positions = <21 20>;
        };

        combo_to_nav_mid_l {
            bindings = <&mo 1>;
            key-positions = <21 20>;
        };
    };

    macros {
        repeat_vaisakk: repeat_vaisakk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE>;
            label = "REPEAT_VAISAKK";
            wait-ms = <60000>;
        };

        repeat_vaisakh_fast: repeat_vaisakh_fast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE &kp V &kp A &kp I &kp S &kp A &kp K &kp H &kp SPACE &kp K &kp M &kp SPACE>;
            label = "REPEAT_VAISAKH_FAST";
            wait-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &mt ESCAPE Q      &kp W       &kp E        &kp R           &kp T       &kp Y      &kp U            &kp I            &kp O         &kp P                  &none
&none  &hm LEFT_SHIFT A  &kp S       &hm LCTRL D  &hm LEFT_ALT F  &kp G       &kp H      &kp J            &kp K            &kp L         &hm RIGHT_SHIFT ENTER  &none
&none  &hm LCTRL Z       &hm LGUI X  &hm LCTRL C  &hm LSHFT V     &kp B       &kp N      &hm RIGHT_ALT M  &hm LCTRL COMMA  &hm LGUI DOT  &hm LEFT_SHIFT FSLH    &none
                                     &mo 3        &lt 2 TAB       &kp LGUI    &kp SPACE  &mo 1            &lt 4 DEL
            >;
        };

        nav_layer {
            bindings = <
&none  &kp NUMBER_1      &kp NUMBER_2         &kp NUMBER_3     &kp NUMBER_4            &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7         &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0     &none
&none  &hm LSHIFT TILDE  &hm LGUI UNDERSCORE  &hm LCTRL MINUS  &hm LALT PLUS           &kp C_VOL_UP    &kp LEFT       &kp DOWN             &kp UP           &kp RIGHT     &kp COLON        &none
&none  &hm LCTRL GRAVE   &kp LGUI             &hm RCTRL SQT    &hm LALT DOUBLE_QUOTES  &kp C_VOL_DN    &kp BACKSPACE  &hm RIGHT_ALT PG_DN  &hm RCTRL PG_UP  &hm RGUI END  &kp RIGHT_SHIFT  &none
                                              &to 0            &kp BACKSPACE           &kp LEFT_GUI    &kp ENTER      &kp SPACE            &kp DEL
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp EXCLAMATION       &kp AT_SIGN   &kp HASH            &kp DOLLAR             &kp PERCENT          &kp CARET      &kp AMPERSAND               &kp ASTERISK             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &hm LEFT_SHIFT TILDE  &kp LGUI      &hm LCTRL LBRC      &hm LALT RIGHT_BRACE   &kp DOUBLE_QUOTES    &kp PIPE       &kp LEFT_BRACE              &kp RIGHT_BRACE          &kp EQUAL             &kp SEMI               &trans
&trans  &hm LCTRL GRAVE       &kp LEFT_GUI  &hm LCTRL C_VOL_DN  &hm LEFT_ALT C_VOL_UP  &kp SQT              &kp BACKSPACE  &hm RIGHT_ALT LEFT_BRACKET  &hm RCTRL RIGHT_BRACKET  &hm RIGHT_GUI PERIOD  &hm RSHIFT BACKSLASH   &trans
                                            &to 0               &trans                 &kp LEFT_GUI         &trans         &trans                      &trans
            >;
        };

        fun_layer {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9     &kp PSCRN          &kt Y  &repeat_vaisakk  &repeat_vaisakh_fast  &none     &none       &none
&none  &kp F11  &kp F4  &kp F5  &kp F6     &kp SLCK           &none  &kp RIGHT_ALT    &kp RCTRL             &kp RGUI  &kp RSHIFT  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK    &none  &kp RALT         &kp LCTRL             &kp LGUI  &kp RSHIFT  &none
                        &to 0   &kp SPACE  &kp LEFT_GUI       &mo 2  &kp SPACE        &none
            >;
        };

        adj_layer {
            bindings = <
&none  &none         &none         &none         &none         &none           &bt BT_CLR   &none       &none       &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG    &none        &bt BT_PRV  &bt BT_NXT  &none  &none  &none
&none  &none         &none         &none         &sys_reset    &bootloader     &bootloader  &sys_reset  &none       &none  &none  &none
                                   &to 0         &none         &none           &none        &none       &none
            >;
        };

        num_layer {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT        &to 0      &none       &none      &none     &none     &none
&none  &kp SQT    &kp N4  &kp N5  &kp N6  &kp EQUAL       &kp MINUS  &kp RSHIFT  &kp RCTRL  &kp RGUI  &kp RALT  &none
&none  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH        &none      &kp LSHFT   &kp LCTRL  &kp LGUI  &kp LALT  &none
                          &to 0   &kp N0  &kp LEFT_GUI    &kp RET    &kp SPACE   &kp DEL
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
